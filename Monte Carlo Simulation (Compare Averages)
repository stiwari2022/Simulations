import random
import matplotlib.pyplot as plt
fig=plt.figure(figsize=(13, 5))
print ("Monte Carlo Simulation")
GitChub=int(input("Enter the number of data sets: "))
Chubster=int(input("Enter the number of simulations: "))
Chub_Dot_Com=int(input("Enter the average number of lines in a line: "))
print ("\n\n")
def Chub():
  Chuble=input("Enter this line's name: ")
  Chubington=int(input("Enter this list's size: "))
























































  Lispington=[]
  for ipsum in range(0, Chubington):
    print("Enter number at index {}:".format(ipsum))
    Num_Chub=int(input())
    Lispington.append(Num_Chub)
  print("\nList: {}".format(Lispington))
  def Mean(AND_and_OR):
    return sum(AND_and_OR)/len(AND_and_OR)
  Big=[]
  Jeb=0
  Chubni=1
  while (Jeb<Chubni):
    Mere_List=[]
    Lisp=[]
    Lispin=[]
    a=0
    b=0
    c=0
    d=0
    e=0
    f=0
    g=0
    h=0
    i=0
    j=0
    k=0
    l=0
    m=0
    n=0
    o=0
    p=0
    q=0
    r=0
    s=0
    t=0
    u=0
    v=0
    w=0
    x=0
    y=0
    z=0
    aa=0
    qa=0
    sa=0
    xa=0
    ya=0
    Jeb=Jeb+1
    while (q<Chub_Dot_Com):
      q=q+1
      g=random.choice(Lispington)
      Lisp.append(g)
      x=Mean(Lisp)
    a=100+x
    b=a/100
    x=100*b
    Mere_List.append(x)
    while (z<Chubster-1):
      while (qa<Chub_Dot_Com):
        qa=qa+1
        ga=random.choice(Lispington)
        Lispin.append(ga)
        xa=Mean(Lispin)
      ya=Lispington[-1]
      aa=100+xa
      ba=aa/100
      sa=Mere_List[-1]*ba
      Mere_List.append(sa)
      z=z+1
      i=Mere_List[-1]
    print (Mere_List)
    plt.plot(Mere_List, label=Chuble)
    Big.append(i)
  Big_Chub=Mean(Big)
  print ("Endpoint: {}\n\n\n".format(Big_Chub))
Chubing=0
while (Chubing<GitChub):
  Chub()
  Chubing=Chubing+1
plt.legend()
