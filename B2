import datetime, random
def Geb(Geb_1):
     Geb_2=[]
     for i in range(Geb_1):
         Cow_Juice=datetime.date(2001, 1, 1)
         Ram=datetime.timedelta(random.randint(0, 364))
         B=Cow_Juice+Ram
         Geb_2.append(B)
     return Geb_2
def Sqarp(Geb_2):
     if len(Geb_2)==len(set(Geb_2)):
         return None
     for a, JPG_e in enumerate(Geb_2):
         for B, JPG_b in enumerate(Geb_2[a + 1 :]):
             if JPG_e==JPG_b:
                 return JPG_e
Sankara=('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec')
while True:
     print('Number of birthdays to generate (The max is 1000)')
     Les_Sankara=input('> ')
     if Les_Sankara.isdecimal() and (0 < int(Les_Sankara) <= 1000):
         Sqarq=int(Les_Sankara)
         break
print()
print("List of", Sqarq, 'birthdays:')
Geb_2 = Geb(Sqarq)
for i, B in enumerate(Geb_2):
     if i!=0:
         print(', ', end='')
     Big_Sankara=Sankara[B.month - 1]
     Sankara_1='{} {}'.format(Big_Sankara, B.day)
     print(Sankara_1, end='')
print()
print()
Sankara=Sqarp(Geb_2)
print('In this simulation ', end='')
if Sankara!=None:
     Sankaraster = [Sankara.month - 1]
     Big_Sankara=Sankaraster
     Sankara_1 = '{} {}'.format(Big_Sankara, Sankara.day)
     print('at least two people have birthdays on', Sankara_1)
else:
     print('there are no matching birthdays')
print()
input('Press enter if you want to calculate the probability of two birthdays that are on the same day')
print('Now Let\'s run another 1 million simulations')
Sankarab=0
for i in range(1_000_000):
     if i % 10_000==0:
         print(i, 'simulations finished')
     Geb_2=Geb(Sqarq)
     if Sqarp(Geb_2)!=None:
         Sankarab=Sankarab+1
print('100,000 simulations finished')
Sankarani=round(Sankarab/1_000_000*100, 2)
print('Number of matching birthdays out of 1 million people:', Sankarab)
print('Precentage of matching birthdays:', Sankarani, "%")
